{"version":3,"sources":["assets/heroes/ana-icon.png","assets/heroes/baptiste-icon.png","assets/heroes/bastion-icon.png","assets/heroes/bob-icon.png","assets/heroes/hanzo-icon.png","assets/heroes/lucio-icon.png","assets/heroes/mei-icon.png","assets/heroes/mercy-icon.png","assets/heroes/orisa-icon.png","assets/heroes/sigma-icon.png","assets/heroes/torbjorn-icon.png","assets/heroes/widowmaker-icon.png","assets/heroes/wreckingball-icon.png","assets/heroes/zarya-icon.png","assets/heroes/zenyatta-icon.png","assets/heroes sync /^/.*/.png$","assets/heroes sync /^/.*/-icon/.png$","assets/heroes/ana.png","assets/heroes/ashe.png","assets/heroes/baptiste.png","assets/heroes/bastion.png","assets/heroes/bob.png","assets/heroes/brigitte.png","assets/heroes/doomfist.png","assets/heroes/dva.png","assets/heroes/dvameka.png","assets/heroes/echo.png","assets/heroes/genji.png","assets/heroes/hanzo.png","assets/heroes/junkrat.png","assets/heroes/lucio.png","assets/heroes/mccree.png","assets/heroes/mei.png","assets/heroes/mercy.png","assets/heroes/moira.png","assets/heroes/orisa.png","assets/heroes/pharah.png","assets/heroes/reaper.png","assets/heroes/reinhardt.png","assets/heroes/roadhog.png","assets/heroes/sigma.png","assets/heroes/soldier.png","assets/heroes/sombra.png","assets/heroes/symmetra.png","assets/heroes/torbjorn.png","assets/heroes/tracer.png","assets/heroes/widowmaker.png","assets/heroes/winston.png","assets/heroes/wreckingball.png","assets/heroes/zarya.png","assets/heroes/zenyatta.png","assets/card-back.png","context/gameContext.js","context/turnContext.js","components/layout/HeroCounter.js","components/cards/CardEffects.js","assets/healthbackground-hexagon.png","components/cards/HealthCounter.js","assets/shieldcounter.png","components/cards/ShieldCounter.js","components/cards/Card.js","components/layout/CardDisplay.js","helper.js","data.js","components/layout/PlayerHand.js","components/layout/PowerCounter.js","components/layout/PlayerArea.js","components/layout/SynergyCounter.js","components/layout/CounterArea.js","components/layout/BoardRow.js","components/layout/PlayerBoard.js","components/layout/PlayerHalf.js","assets/logo3.png","components/layout/TitleCard.js","components/layout/Footer.js","components/cards/HeroAbilities.js","components/cards/CardFocus.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","gameContext","createContext","turnContext","HeroCounter","props","playerHeroId","heroId","slice","length","rowId","playerNum","className","onClick","setCardFocus","src","require","default","alt","CardEffects","type","effects","HealthCounter","health","SynergyCounter","shield","Card","useContext","gameState","setGameState","turnState","setTurnState","playerCardsId","index","playerCards","cards","name","power","synergy","enemyEffects","allyEffects","isPlayed","isDiscarded","console","log","draggableId","isDragDisabled","playerTurn","provided","draggableProps","dragHandleProps","ref","innerRef","style","filter","parseInt","CardDisplay","rows","cardIds","droppableId","direction","listClass","droppableProps","cardId","placeholder","helper","getRandInt","min","max","Math","floor","random","createPlayerCard","data","ability1","ability2","effect","maxHealth","specialHeroes","bob","image","icon","f","m","b","dva","heroes","ana","ashe","baptiste","bastion","brigitte","doomfist","dvameka","echo","genji","hanzo","junkrat","lucio","mccree","mei","mercy","moira","orisa","pharah","reaper","reinhardt","roadhog","sigma","soldier","sombra","symmetra","torbjorn","tracer","widowmaker","Promise","reject","$","on","targetRow","target","closest","attr","abilityResult","rowKey","rowValue","off","rowSynergy","targetCardId","cardKey","cardValue","synergyCost","winston","wreckingball","zarya","zenyatta","label","PlayerHand","playerHandId","handCards","nextCardDraw","setNextCardDraw","addNewCardToHand","newCard","newState","update","$set","disabled","prevState","randInt","randKey","newCardId","newCardIds","drawCards","turnCount","PowerCounter","PlayerArea","playerAreaId","playerPower","totalPower","values","reduce","a","CounterArea","BoardRow","rowCards","playerHand","synergyValue","useEffect","rowPosition","PlayerBoard","PlayerHalf","TitleCard","owlogo","Footer","HeroAbilities","unsetCardFocus","cardFocus","setRowSynergy","applyDamage","damageValue","targetId","targetPlayerNum","targetHealth","targetShield","i","abilities","run","enemyPlayer","playerRowCardIds","enemyPlayerRowCardIds","newDva","newRowCards","maxTargets","newRow","updatedTargetRowCardIds","newRowCardIds","stopPropagation","alert","CardFocus","App","useState","player1","wins","player2","wonLastMatch","Provider","value","onDragEnd","result","destination","source","start","finish","finishPosition","startCardIds","Array","from","splice","newStart","addSynergy","finishCardIds","newFinish","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5c19fed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ana-icon.0a9b633a.png\";","export default __webpack_public_path__ + \"static/media/baptiste-icon.2f79217b.png\";","export default __webpack_public_path__ + \"static/media/bastion-icon.43554851.png\";","export default __webpack_public_path__ + \"static/media/bob-icon.95fe3da4.png\";","export default __webpack_public_path__ + \"static/media/hanzo-icon.0498f942.png\";","export default __webpack_public_path__ + \"static/media/lucio-icon.9c4b209d.png\";","export default __webpack_public_path__ + \"static/media/mei-icon.511f6a1e.png\";","export default __webpack_public_path__ + \"static/media/mercy-icon.ec50d5ca.png\";","export default __webpack_public_path__ + \"static/media/orisa-icon.db0c11fd.png\";","export default __webpack_public_path__ + \"static/media/sigma-icon.4c97616c.png\";","export default __webpack_public_path__ + \"static/media/torbjorn-icon.9efb7940.png\";","export default __webpack_public_path__ + \"static/media/widowmaker-icon.2036fc9e.png\";","export default __webpack_public_path__ + \"static/media/wreckingball-icon.d593d1dc.png\";","export default __webpack_public_path__ + \"static/media/zarya-icon.1f8a8962.png\";","export default __webpack_public_path__ + \"static/media/zenyatta-icon.6a7ae0d9.png\";","var map = {\n\t\"./ana-icon.png\": 19,\n\t\"./ana.png\": 51,\n\t\"./ashe.png\": 52,\n\t\"./baptiste-icon.png\": 20,\n\t\"./baptiste.png\": 53,\n\t\"./bastion-icon.png\": 21,\n\t\"./bastion.png\": 54,\n\t\"./bob-icon.png\": 22,\n\t\"./bob.png\": 55,\n\t\"./brigitte.png\": 56,\n\t\"./doomfist.png\": 57,\n\t\"./dva.png\": 58,\n\t\"./dvameka.png\": 59,\n\t\"./echo.png\": 60,\n\t\"./genji.png\": 61,\n\t\"./hanzo-icon.png\": 23,\n\t\"./hanzo.png\": 62,\n\t\"./junkrat.png\": 63,\n\t\"./lucio-icon.png\": 24,\n\t\"./lucio.png\": 64,\n\t\"./mccree.png\": 65,\n\t\"./mei-icon.png\": 25,\n\t\"./mei.png\": 66,\n\t\"./mercy-icon.png\": 26,\n\t\"./mercy.png\": 67,\n\t\"./moira.png\": 68,\n\t\"./orisa-icon.png\": 27,\n\t\"./orisa.png\": 69,\n\t\"./pharah.png\": 70,\n\t\"./reaper.png\": 71,\n\t\"./reinhardt.png\": 72,\n\t\"./roadhog.png\": 73,\n\t\"./sigma-icon.png\": 28,\n\t\"./sigma.png\": 74,\n\t\"./soldier.png\": 75,\n\t\"./sombra.png\": 76,\n\t\"./symmetra.png\": 77,\n\t\"./torbjorn-icon.png\": 29,\n\t\"./torbjorn.png\": 78,\n\t\"./tracer.png\": 79,\n\t\"./widowmaker-icon.png\": 30,\n\t\"./widowmaker.png\": 80,\n\t\"./winston.png\": 81,\n\t\"./wreckingball-icon.png\": 31,\n\t\"./wreckingball.png\": 82,\n\t\"./zarya-icon.png\": 32,\n\t\"./zarya.png\": 83,\n\t\"./zenyatta-icon.png\": 33,\n\t\"./zenyatta.png\": 84\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;","var map = {\n\t\"./ana-icon.png\": 19,\n\t\"./baptiste-icon.png\": 20,\n\t\"./bastion-icon.png\": 21,\n\t\"./bob-icon.png\": 22,\n\t\"./hanzo-icon.png\": 23,\n\t\"./lucio-icon.png\": 24,\n\t\"./mei-icon.png\": 25,\n\t\"./mercy-icon.png\": 26,\n\t\"./orisa-icon.png\": 27,\n\t\"./sigma-icon.png\": 28,\n\t\"./torbjorn-icon.png\": 29,\n\t\"./widowmaker-icon.png\": 30,\n\t\"./wreckingball-icon.png\": 31,\n\t\"./zarya-icon.png\": 32,\n\t\"./zenyatta-icon.png\": 33\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 44;","export default __webpack_public_path__ + \"static/media/ana.56cc914a.png\";","export default __webpack_public_path__ + \"static/media/ashe.98f73c10.png\";","export default __webpack_public_path__ + \"static/media/baptiste.deb33cc3.png\";","export default __webpack_public_path__ + \"static/media/bastion.569f19df.png\";","export default __webpack_public_path__ + \"static/media/bob.0b181d17.png\";","export default __webpack_public_path__ + \"static/media/brigitte.bb28f5f0.png\";","export default __webpack_public_path__ + \"static/media/doomfist.f4521649.png\";","export default __webpack_public_path__ + \"static/media/dva.a6114770.png\";","export default __webpack_public_path__ + \"static/media/dvameka.f84cf415.png\";","export default __webpack_public_path__ + \"static/media/echo.8ceea4d3.png\";","export default __webpack_public_path__ + \"static/media/genji.abb45132.png\";","export default __webpack_public_path__ + \"static/media/hanzo.39890961.png\";","export default __webpack_public_path__ + \"static/media/junkrat.45daef8d.png\";","export default __webpack_public_path__ + \"static/media/lucio.f4d88b62.png\";","export default __webpack_public_path__ + \"static/media/mccree.5454674d.png\";","export default __webpack_public_path__ + \"static/media/mei.cc10cbda.png\";","export default __webpack_public_path__ + \"static/media/mercy.1bf234c2.png\";","export default __webpack_public_path__ + \"static/media/moira.5e097835.png\";","export default __webpack_public_path__ + \"static/media/orisa.40ccf2a1.png\";","export default __webpack_public_path__ + \"static/media/pharah.a59554b8.png\";","export default __webpack_public_path__ + \"static/media/reaper.2920af27.png\";","export default __webpack_public_path__ + \"static/media/reinhardt.1b47bde2.png\";","export default __webpack_public_path__ + \"static/media/roadhog.4cfcdcb2.png\";","export default __webpack_public_path__ + \"static/media/sigma.2c857143.png\";","export default __webpack_public_path__ + \"static/media/soldier.3b8cd259.png\";","export default __webpack_public_path__ + \"static/media/sombra.20deb205.png\";","export default __webpack_public_path__ + \"static/media/symmetra.49364b0e.png\";","export default __webpack_public_path__ + \"static/media/torbjorn.57f11099.png\";","export default __webpack_public_path__ + \"static/media/tracer.fe421e56.png\";","export default __webpack_public_path__ + \"static/media/widowmaker.024938d3.png\";","export default __webpack_public_path__ + \"static/media/winston.78a45077.png\";","export default __webpack_public_path__ + \"static/media/wreckingball.e573e997.png\";","export default __webpack_public_path__ + \"static/media/zarya.17e89c2b.png\";","export default __webpack_public_path__ + \"static/media/zenyatta.d8274ce5.png\";","export default __webpack_public_path__ + \"static/media/card-back.fb86ba2a.png\";","import { createContext } from 'react';\r\n\r\nconst gameContext = createContext(null);\r\n\r\nexport default gameContext;","import { createContext } from 'react';\r\n\r\nconst turnContext = createContext(null);\r\n\r\nexport default turnContext;","export default function HeroCounter(props) {\r\n  const playerHeroId = props.playerHeroId;\r\n  const heroId = playerHeroId.slice(1, playerHeroId.length);\r\n  const playerNum = props.playerNum;\r\n  const rowId = props.rowId;\r\n\r\n  return (\r\n    <div className=\"counter\" onClick={() => props.setCardFocus({playerHeroId: playerHeroId, rowId: rowId})}>\r\n      <img\r\n        src={require(`assets/heroes/${heroId}-icon.png`).default}\r\n        className=\"counter herocounter\"\r\n        alt=\"Hero Counter\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import HeroCounter from 'components/layout/HeroCounter';\r\n\r\nexport default function CardEffects(props) {\r\n  const type = props.type;\r\n  const effects = props.effects;\r\n\r\n  return (\r\n    <div className=\"effectscontainer\">\r\n    {effects.length > 0 ? (\r\n      <div className={`effects ${type}effects counterarea`}>\r\n      {effects && effects.map((heroId) => {\r\n        return(<HeroCounter heroId={heroId} key={heroId} />);\r\n      })}\r\n      </div>\r\n    ) : (null)}\r\n    </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/healthbackground-hexagon.26052b95.png\";","import background from 'assets/healthbackground-hexagon.png'\r\n\r\nexport default function HealthCounter(props) {\r\n  const type = props.type;\r\n\r\n  return (\r\n    <div className={`healthcounter counter ${type}`}>\r\n      {props.health}\r\n    </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/shieldcounter.5a1f4f54.png\";","import background from 'assets/shieldcounter.png';\r\n\r\nexport default function SynergyCounter(props) {\r\n  const shield = props.shield;\r\n  const type = props.type;\r\n  return (\r\n    <div className={`shieldcounter counter ${type}`}>\r\n      <span><h4>{shield}</h4></span>\r\n    </div>\r\n  )\r\n}","import React, { useContext } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport gameContext from \"context/gameContext\";\r\nimport turnContext from \"context/turnContext\";\r\nimport CardEffects from \"components/cards/CardEffects\";\r\nimport HealthCounter from \"components/cards/HealthCounter\";\r\nimport ShieldCounter from \"components/cards/ShieldCounter\";\r\n\r\nexport default function Card(props) {\r\n  // Context\r\n  const { gameState, setGameState } = useContext(gameContext);\r\n  const { turnState, setTurnState } = useContext(turnContext);\r\n\r\n  // Variables\r\n  const playerHeroId = props.playerHeroId;\r\n  const playerNum = props.playerNum;\r\n  const playerCardsId = `player${playerNum}cards`;\r\n  const rowId = props.rowId;\r\n  const rowPosition = rowId[1];\r\n  const index = props.index;\r\n\r\n  // Get card attributes from relevant player\r\n  const {\r\n    id,\r\n    name,\r\n    health,\r\n    power,\r\n    synergy,\r\n    shield,\r\n    enemyEffects,\r\n    allyEffects,\r\n    isPlayed,\r\n    isDiscarded,\r\n  } = gameState.playerCards[playerCardsId].cards[playerHeroId];\r\n\r\n  console.log(`${id} is discarded ${isDiscarded}`)\r\n\r\n  function discardCard() {\r\n    // TODO: e.g. clear counters related to card, set isDiscarded\r\n  }\r\n\r\n  return (\r\n    (isDiscarded) ? (null) : (\r\n      <Draggable\r\n        draggableId={playerHeroId}\r\n        index={index}\r\n        isDragDisabled={isPlayed || turnState.playerTurn !== playerNum}\r\n      >\r\n        {(provided) => (\r\n          <li\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            <div className=\"cardcontainer\">\r\n              {playerNum === 1 ? (\r\n                <CardEffects type=\"enemy\" effects={enemyEffects} />\r\n              ) : (\r\n                <CardEffects type=\"ally\" effects={allyEffects} />\r\n              )}\r\n              <div\r\n                id={`${playerHeroId}`}\r\n                style={health > 0 ? null : { filter: \"grayscale(1)\" }}\r\n                className=\"card\"\r\n                onClick={\r\n                  turnState.playerTurn === playerNum ||\r\n                  parseInt(rowId[0]) === playerNum\r\n                    ? () => {\r\n                        props.setCardFocus({\r\n                          playerHeroId: playerHeroId,\r\n                          rowId: rowId,\r\n                        });\r\n                      }\r\n                    : null\r\n                }\r\n              >\r\n                {turnState.playerTurn === playerNum ||\r\n                parseInt(rowId[0]) === playerNum ? (\r\n                  <HealthCounter type=\"cardcounter\" health={health} />\r\n                ) : null}\r\n                {turnState.playerTurn === playerNum ||\r\n                parseInt(rowId[0]) === playerNum\r\n                  ? shield > 0 && <ShieldCounter type=\"cardcounter\" shield={shield} />\r\n                  : null}\r\n                <img\r\n                  src={\r\n                    turnState.playerTurn === playerNum ||\r\n                    parseInt(rowId[0]) === playerNum\r\n                      ? require(`assets/heroes/${id}.png`).default\r\n                      : require(\"assets/card-back.png\").default\r\n                  }\r\n                  className=\"cardimg\"\r\n                  alt={`${name} Card`}\r\n                />\r\n              </div>\r\n              {playerNum === 1 ? (\r\n                <CardEffects type=\"ally\" effects={allyEffects} />\r\n              ) : (\r\n                <CardEffects type=\"enemy\" effects={enemyEffects} />\r\n              )}\r\n            </div>\r\n          </li>\r\n        )}\r\n      </Draggable>\r\n\r\n    )\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Card from \"components/cards/Card\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport gameContext from \"context/gameContext\";\r\n\r\nexport default function CardDisplay(props) {\r\n  // Context\r\n  const { gameState } = useContext(gameContext);\r\n\r\n  // Variables\r\n  const rowId = props.rowId;\r\n  const cards = gameState.rows[rowId].cardIds;\r\n  const playerNum = props.playerNum;\r\n\r\n  return (\r\n    <Droppable droppableId={props.droppableId} direction=\"horizontal\">\r\n      {(provided) => (\r\n        <ul\r\n          className={props.listClass}\r\n          {...provided.droppableProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          {cards &&\r\n            cards.map((cardId, index) => {\r\n              return (\r\n                  <Card\r\n                    setCardFocus={props.setCardFocus}\r\n                    playerHeroId={cardId}\r\n                    key={cardId}\r\n                    playerNum={playerNum}\r\n                    rowId={props.rowId}\r\n                    index={index}\r\n                  />\r\n              );\r\n            })}\r\n          {provided.placeholder}\r\n        </ul>\r\n      )}\r\n    </Droppable>\r\n  );\r\n}\r\n","import data from 'data';\r\n\r\nconst helper = {\r\n  // Helper function - returns random number between min (inc) and max (exc)\r\n  getRandInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  },\r\n  // Creates a card with its own health and id unique to the playerCard, returns player-specific ID\r\n  createPlayerCard(playerNum, heroId) {\r\n    const heroType = (heroId === 'dva' || heroId === 'bob') ? 'specialHeroes' : 'heroes';\r\n    \r\n    // Get card values\r\n    const {\r\n      id,\r\n      name,\r\n      health,\r\n      power,\r\n      synergy,\r\n      ability1,\r\n      ability2,\r\n      effect,\r\n    } = data[heroType][heroId];\r\n    \r\n    const maxHealth = health;\r\n    const playerHeroId = `${playerNum}${heroId}`;\r\n    const shield = 0;\r\n    const enemyEffects = [];\r\n    const allyEffects = [];\r\n    const isPlayed = false;\r\n    const isDiscarded = false;\r\n\r\n    // Combine values into one new hero object and assign to relevant player\r\n    const newCard = {\r\n      playerHeroId,\r\n      id,\r\n      name,\r\n      health,\r\n      maxHealth,\r\n      power,\r\n      synergy,\r\n      shield,\r\n      ability1,\r\n      ability2,\r\n      effect,\r\n      enemyEffects,\r\n      allyEffects,\r\n      isPlayed,\r\n      isDiscarded,\r\n    };\r\n\r\n    \r\n    return newCard;\r\n  }\r\n};\r\n\r\nexport default helper;\r\n","import helper from 'helper';\r\nimport $ from 'jquery';\r\n\r\n// Data for all hero cards\r\nconst data = {\r\n  specialHeroes: {\r\n    bob: {\r\n      id: \"bob\",\r\n      name: \"Bob\",\r\n      image: \"assets/heroes/bob.png\",\r\n      icon: \"assets/heroes/bob-icon.png\",\r\n      effect: () => {},\r\n      health: 3,\r\n      power: {\r\n        f: 1,\r\n        m: 1,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 0,\r\n        m: 0,\r\n        b: 0,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    dva: {\r\n      id: \"dva\",\r\n      name: \"D.va\",\r\n      image: \"assets/heroes/dva.png\",\r\n      health: 2,\r\n      power: {\r\n        f: 1,\r\n        m: 1,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 0,\r\n        m: 0,\r\n        b: 0,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n  },\r\n  heroes: {\r\n    ana: {\r\n      id: \"ana\",\r\n      name: \"Ana\",\r\n      image: \"assets/heroes/ana.png\",\r\n      icon: \"assets/heroes/ana-icon.png\",\r\n      effect: () => {},\r\n      health: 4,\r\n      power: {\r\n        f: 1,\r\n        m: 2,\r\n        b: 2,\r\n      },\r\n      synergy: {\r\n        f: 3,\r\n        m: 2,\r\n        b: 2,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    ashe: {\r\n      id: \"ashe\",\r\n      name: \"Ashe\",\r\n      image: \"assets/heroes/ashe.png\",\r\n      health: 3,\r\n      power: {\r\n        f: 2,\r\n        m: 1,\r\n        b: 3,\r\n      },\r\n      synergy: {\r\n        f: 2,\r\n        m: 3,\r\n        b: 1,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    baptiste: {\r\n      id: \"baptiste\",\r\n      name: \"Baptiste\",\r\n      image: \"assets/heroes/baptiste.png\",\r\n      icon: \"assets/heroes/baptiste-icon.png\",\r\n      effect: () => {},\r\n      health: 4,\r\n      power: {\r\n        f: 3,\r\n        m: 2,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 1,\r\n        m: 2,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    bastion: {\r\n      id: \"bastion\",\r\n      name: \"Bastion\",\r\n      image: \"assets/heroes/bastion.png\",\r\n      icon: \"assets/heroes/bastion-icon.png\",\r\n      effect: () => {},\r\n      health: 5,\r\n      power: {\r\n        f: 1,\r\n        m: 2,\r\n        b: 3,\r\n      },\r\n      synergy: {\r\n        f: 3,\r\n        m: 2,\r\n        b: 1,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    \r\n    brigitte: {\r\n      id: \"brigitte\",\r\n      name: \"Brigitte\",\r\n      image: \"assets/heroes/brigitte.png\",\r\n      health: 4,\r\n      power: {\r\n        f: 3,\r\n        m: 2,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 1,\r\n        m: 2,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    doomfist: {\r\n      id: \"doomfist\",\r\n      name: \"Doomfist\",\r\n      image: \"assets/heroes/doomfist.png\",\r\n      health: 4,\r\n      power: {\r\n        f: 3,\r\n        m: 2,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 1,\r\n        m: 2,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    \r\n    dvameka: {\r\n      id: \"dvameka\",\r\n      name: \"D.va + Meka\",\r\n      image: \"assets/heroes/dvameka.png\",\r\n      health: 4,\r\n      power: {\r\n        f: 2,\r\n        m: 3,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 2,\r\n        m: 1,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    echo: {\r\n      id: \"echo\",\r\n      name: \"Echo\",\r\n      image: \"assets/heroes/echo.png\",\r\n      health: 4,\r\n      power: {\r\n        f: 1,\r\n        m: 3,\r\n        b: 2,\r\n      },\r\n      synergy: {\r\n        f: 3,\r\n        m: 1,\r\n        b: 2,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    genji: {\r\n      id: \"genji\",\r\n      name: \"Genji\",\r\n      image: \"assets/heroes/genji.png\",\r\n      health: 4,\r\n      power: {\r\n        f: 3,\r\n        m: 2,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 1,\r\n        m: 2,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    hanzo: {\r\n      id: \"hanzo\",\r\n      name: \"Hanzo\",\r\n      image: \"assets/heroes/hanzo.png\",\r\n      icon: \"assets/heroes/hanzo-icon.png\",\r\n      effect: () => {},\r\n      health: 4,\r\n      power: {\r\n        f: 1,\r\n        m: 3,\r\n        b: 2,\r\n      },\r\n      synergy: {\r\n        f: 3,\r\n        m: 1,\r\n        b: 2,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    junkrat: {\r\n      id: \"junkrat\",\r\n      name: \"Junkrat\",\r\n      image: \"assets/heroes/junkrat.png\",\r\n      health: 3,\r\n      power: {\r\n        f: 3,\r\n        m: 2,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 1,\r\n        m: 2,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    lucio: {\r\n      id: \"lucio\",\r\n      name: \"Lucio\",\r\n      image: \"assets/heroes/lucio.png\",\r\n      icon: \"assets/heroes/lucio-icon.png\",\r\n      effect: () => {},\r\n      health: 3,\r\n      power: {\r\n        f: 2,\r\n        m: 1,\r\n        b: 2,\r\n      },\r\n      synergy: {\r\n        f: 2,\r\n        m: 3,\r\n        b: 2,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    mccree: {\r\n      id: \"mccree\",\r\n      name: \"McCree\",\r\n      image: \"assets/heroes/mccree.png\",\r\n      health: 4,\r\n      power: {\r\n        f: 2,\r\n        m: 3,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 2,\r\n        m: 1,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    mei: {\r\n      id: \"mei\",\r\n      name: \"Mei\",\r\n      image: \"assets/heroes/mei.png\",\r\n      icon: \"assets/heroes/mei-icon.png\",\r\n      effect: () => {},\r\n      health: 4,\r\n      power: {\r\n        f: 2,\r\n        m: 3,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 2,\r\n        m: 1,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    mercy: {\r\n      id: \"mercy\",\r\n      name: \"Mercy\",\r\n      image: \"assets/heroes/mercy.png\",\r\n      icon: \"assets/heroes/mercy-icon.png\",\r\n      effect: () => {},\r\n      health: 3,\r\n      power: {\r\n        f: 1,\r\n        m: 2,\r\n        b: 2,\r\n      },\r\n      synergy: {\r\n        f: 3,\r\n        m: 2,\r\n        b: 2,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    moira: {\r\n      id: \"moira\",\r\n      name: \"Moira\",\r\n      image: \"assets/heroes/moira.png\",\r\n      health: 3,\r\n      power: {\r\n        f: 2,\r\n        m: 1,\r\n        b: 2,\r\n      },\r\n      synergy: {\r\n        f: 2,\r\n        m: 3,\r\n        b: 2,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    orisa: {\r\n      id: \"orisa\",\r\n      name: \"Orisa\",\r\n      image: \"assets/heroes/orisa.png\",\r\n      icon: \"assets/heroes/orisa-icon.png\",\r\n      effect: () => {},\r\n      health: 5,\r\n      power: {\r\n        f: 1,\r\n        m: 2,\r\n        b: 3,\r\n      },\r\n      synergy: {\r\n        f: 3,\r\n        m: 2,\r\n        b: 1,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    pharah: {\r\n      id: \"pharah\",\r\n      name: \"Pharah\",\r\n      image: \"assets/heroes/pharah.png\",\r\n      health: 4,\r\n      power: {\r\n        f: 1,\r\n        m: 3,\r\n        b: 2,\r\n      },\r\n      synergy: {\r\n        f: 3,\r\n        m: 1,\r\n        b: 2,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    reaper: {\r\n      id: \"reaper\",\r\n      name: \"Reaper\",\r\n      image: \"assets/heroes/reaper.png\",\r\n      health: 4,\r\n      power: {\r\n        f: 2,\r\n        m: 1,\r\n        b: 3,\r\n      },\r\n      synergy: {\r\n        f: 2,\r\n        m: 3,\r\n        b: 1,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    reinhardt: {\r\n      id: \"reinhardt\",\r\n      name: \"Reinhardt\",\r\n      image: \"assets/heroes/reinhardt.png\",\r\n      health: 4,\r\n      power: {\r\n        f: 3,\r\n        m: 2,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 1,\r\n        m: 2,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    roadhog: {\r\n      id: \"roadhog\",\r\n      name: \"Roadhog\",\r\n      image: \"assets/heroes/roadhog.png\",\r\n      health: 5,\r\n      power: {\r\n        f: 3,\r\n        m: 2,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 1,\r\n        m: 2,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    sigma: {\r\n      id: \"sigma\",\r\n      name: \"Sigma\",\r\n      image: \"assets/heroes/sigma.png\",\r\n      icon: \"assets/heroes/sigma-icon.png\",\r\n      effect: () => {},\r\n      health: 4,\r\n      power: {\r\n        f: 1,\r\n        m: 3,\r\n        b: 2,\r\n      },\r\n      synergy: {\r\n        f: 3,\r\n        m: 1,\r\n        b: 2,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    soldier: {\r\n      id: \"soldier\",\r\n      name: \"Soldier 76\",\r\n      image: \"assets/heroes/soldier.png\",\r\n      health: 4,\r\n      power: {\r\n        f: 2,\r\n        m: 3,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 2,\r\n        m: 1,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    sombra: {\r\n      id: \"sombra\",\r\n      name: \"Sombra\",\r\n      image: \"assets/heroes/sombra.png\",\r\n      health: 4,\r\n      power: {\r\n        f: 3,\r\n        m: 1,\r\n        b: 2,\r\n      },\r\n      synergy: {\r\n        f: 1,\r\n        m: 3,\r\n        b: 2,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    symmetra: {\r\n      id: \"symmetra\",\r\n      name: \"Symmetra\",\r\n      image: \"assets/heroes/symmetra.png\",\r\n      health: 3,\r\n      power: {\r\n        f: 2,\r\n        m: 1,\r\n        b: 2,\r\n      },\r\n      synergy: {\r\n        f: 2,\r\n        m: 3,\r\n        b: 2,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    torbjorn: {\r\n      id: \"torbjorn\",\r\n      name: \"Torbjorn\",\r\n      image: \"assets/heroes/torbjorn.png\",\r\n      icon: \"assets/heroes/torbjorn-icon.png\",\r\n      effect: () => {},\r\n      health: 4,\r\n      power: {\r\n        f: 3,\r\n        m: 1,\r\n        b: 2,\r\n      },\r\n      synergy: {\r\n        f: 1,\r\n        m: 3,\r\n        b: 2,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    tracer: {\r\n      id: \"tracer\",\r\n      name: \"Tracer\",\r\n      image: \"assets/heroes/tracer.png\",\r\n      health: 3,\r\n      power: {\r\n        f: 3,\r\n        m: 2,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 1,\r\n        m: 2,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    widowmaker: {\r\n      id: \"widowmaker\",\r\n      name: \"Widowmaker\",\r\n      image: \"assets/heroes/widowmaker.png\",\r\n      icon: \"assets/heroes/widowmaker-icon.png\",\r\n      effect: () => {},\r\n      health: 4,\r\n      power: {\r\n        f: 2,\r\n        m: 1,\r\n        b: 3,\r\n      },\r\n      synergy: {\r\n        f: 2,\r\n        m: 3,\r\n        b: 1,\r\n      },\r\n      ability1() {\r\n        return new Promise((resolve, reject) => {\r\n          $('.row').on('click', (e) => {\r\n            \r\n            const targetRow = $(e.target).closest('.row').attr('id');\r\n  \r\n            const abilityResult = {\r\n              type: 'row',\r\n              rowId: targetRow,\r\n              rowKey: 'effects',\r\n              rowValue: '2widowmaker',\r\n            };\r\n            \r\n            $('.row').off('click');\r\n            if (targetRow[0] !== 'p') {\r\n              resolve(abilityResult);\r\n            } else {\r\n              reject(\"Can't target player hand\");\r\n            }\r\n\r\n        });\r\n        \r\n        });\r\n\r\n        \r\n      },\r\n      ability2(rowSynergy) {\r\n        const synergyCost = 3;\r\n        return new Promise((resolve, reject) => {\r\n            if (rowSynergy >= synergyCost) {\r\n              $('.card').on('click', (e) => {\r\n              const targetCardId = $(e.target).closest('.card').attr('id');\r\n              const targetRow = $(e.target).closest('.row').attr('id');\r\n              if (targetRow[0] === 'p') {reject(\"Cant target player's hand\")}\r\n              const abilityResult = {\r\n                type: 'card',\r\n                targetCardId: targetCardId,\r\n                cardKey: 'health',\r\n                cardValue: 0,\r\n                synergyCost: synergyCost,\r\n                targetRow: targetRow,\r\n              };\r\n\r\n              $('.card').off('click');\r\n\r\n                resolve(abilityResult);\r\n              });\r\n            } else {\r\n              reject('Not enough synergy');\r\n            }           \r\n          }); \r\n      }\r\n    },\r\n    winston: {\r\n      id: \"winston\",\r\n      name: \"Winston\",\r\n      image: \"assets/heroes/winston.png\",\r\n      health: 4,\r\n      power: {\r\n        f: 3,\r\n        m: 2,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 1,\r\n        m: 2,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    wreckingball: {\r\n      id: \"wreckingball\",\r\n      name: \"Wrecking Ball\",\r\n      image: \"assets/heroes/wreckingball.png\",\r\n      icon: \"assets/heroes/wreckingball-icon.png\",\r\n      effect: () => {},\r\n      health: 3,\r\n      power: {\r\n        f: 2,\r\n        m: 3,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 2,\r\n        m: 1,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    zarya: {\r\n      id: \"zarya\",\r\n      name: \"Zarya\",\r\n      image: \"assets/heroes/zarya.png\",\r\n      icon: \"assets/heroes/zarya-icon.png\",\r\n      effect: () => {},\r\n      health: 4,\r\n      power: {\r\n        f: 2,\r\n        m: 3,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 2,\r\n        m: 1,\r\n        b: 3,\r\n      },\r\n      ability1: () => {},\r\n      ability2: () => {},\r\n    },\r\n    zenyatta: {\r\n      id: \"zenyatta\",\r\n      name: \"Zenyatta\",\r\n      image: \"assets/heroes/zenyatta.png\",\r\n      icon: \"assets/heroes/zenyatta-icon.png\",\r\n      effect: () => {},\r\n      health: 4,\r\n      power: {\r\n        f: 2,\r\n        m: 2,\r\n        b: 1,\r\n      },\r\n      synergy: {\r\n        f: 2,\r\n        m: 2,\r\n        b: 3,\r\n      },\r\n      ability1: () => {\r\n        console.log('zen ability1')\r\n      },\r\n      ability2: () => {\r\n        console.log('zen ability2')\r\n      },\r\n    },\r\n  },\r\n  playerCards: {\r\n    'player1cards' :{\r\n      id: 'player1cards',\r\n      cards: {}\r\n    },\r\n    'player2cards': {\r\n      id: 'player2cards',\r\n      cards: {}\r\n    }\r\n  },\r\n  rows: {\r\n    'player1hand': {\r\n      id: 'player1hand',\r\n      cardIds: [],\r\n      power: {\r\n        f: 0,\r\n        m: 0,\r\n        b: 0,\r\n      },\r\n    },\r\n    'player2hand': {\r\n      id: 'player2hand',\r\n      cardIds: [],\r\n      power: {\r\n        f: 0,\r\n        m: 0,\r\n        b: 0,\r\n      },\r\n    },\r\n    '1f': {\r\n      id: '1f',\r\n      label: 'Front Row',\r\n      cardIds: [],\r\n      synergy: 0,\r\n      effects: [],\r\n    },\r\n    '1m': {\r\n      id: '1m',\r\n      label: 'Middle Row',\r\n      cardIds: [],\r\n      synergy: 0,\r\n      effects: [],\r\n    },\r\n    '1b': {\r\n      id: '1b',\r\n      label: 'Back Row',\r\n      cardIds: [],\r\n      synergy: 0,\r\n      effects: [],\r\n    },\r\n    '2b': {\r\n      id: '2b',\r\n      label: 'Back Row',\r\n      cardIds: [],\r\n      synergy: 0,\r\n      effects: [],\r\n    },\r\n    '2m': {\r\n      id: '2m',\r\n      label: 'Middle Row',\r\n      cardIds: [],\r\n      synergy: 0,\r\n      effects: [],\r\n    },\r\n    '2f': {\r\n      id: '2f',\r\n      label: 'Front Row',\r\n      cardIds: [],\r\n      synergy: 0,\r\n      effects: [],\r\n    },\r\n  }\r\n};\r\n\r\nexport default data;\r\n","import React, { useContext } from \"react\";\r\nimport update from \"immutability-helper\";\r\nimport CardDisplay from \"components/layout/CardDisplay\";\r\nimport data from \"data\";\r\nimport gameContext from \"context/gameContext\";\r\nimport turnContext from \"context/turnContext\";\r\nimport helper from \"helper\";\r\n\r\nexport default function PlayerHand(props) {\r\n  // Context\r\n  const { gameState, setGameState } = useContext(gameContext);\r\n  const { turnState, setTurnState } = useContext(turnContext);\r\n\r\n  // Variables\r\n  const playerNum = props.playerNum;\r\n  const playerHandId = `player${playerNum}hand`;\r\n  const playerCardsId = `player${playerNum}cards`;\r\n  const handCards = gameState.rows[playerHandId].cardIds;\r\n  const nextCardDraw = props.nextCardDraw;\r\n  const setNextCardDraw = props.setNextCardDraw;\r\n\r\n  console.log(props.nextCardDraw)\r\n\r\n  // Calls the create card function and adds to hand\r\n  function addNewCardToHand(playerNum, heroId) {\r\n    \r\n    const newCard = helper.createPlayerCard(playerNum, heroId);\r\n\r\n    const newState = update(gameState, {\r\n      playerCards: {\r\n        [`player${playerNum}cards`]: {\r\n          cards: { [newCard.playerHeroId]: { $set: newCard } },\r\n        },\r\n      },\r\n    });\r\n\r\n    setGameState(newState);\r\n\r\n    // return player-specific id to be used elsewhere\r\n    return newCard.playerHeroId;\r\n  }\r\n\r\n  // Draws one random card and puts the card into the player's hand\r\n  function drawCards(nextCardDraw) {\r\n    // TODO: specify number of cards to draw?\r\n    if (nextCardDraw[`player${playerNum}`] !== null) {\r\n      // Draw specific card designated by nextCardDraw state\r\n      var playerHeroId = addNewCardToHand(playerNum, nextCardDraw[`player${playerNum}`]);\r\n      setNextCardDraw(prevState => ({\r\n        ...prevState,\r\n        [`player${playerNum}`]: null,\r\n      }));\r\n    } else {\r\n      // Draw a random card id, then check if it was already drawn, if so draw again\r\n      do {\r\n        const randInt = helper.getRandInt(0, Object.keys(data.heroes).length);\r\n        const randKey = Object.keys(data.heroes)[randInt];\r\n        const newCardId = data.heroes[randKey].id;\r\n        // Create the player-specific card using the random id and get player-specific id\r\n        playerHeroId = addNewCardToHand(props.playerNum, newCardId);\r\n      } while (playerHeroId in gameState.playerCards[playerCardsId].cards);\r\n    }\r\n\r\n    // Create updated array and update state\r\n    const newCardIds = [...gameState.rows[playerHandId].cardIds, playerHeroId];\r\n    setGameState((prevState) => ({\r\n      ...prevState,\r\n      rows: {\r\n        ...prevState.rows,\r\n        [playerHandId]: {\r\n          ...prevState.rows[playerHandId],\r\n          cardIds: newCardIds,\r\n        },\r\n      },\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"playerhand cardRow\">\r\n      <CardDisplay\r\n        playerNum={props.playerNum}\r\n        droppableId={`player${props.playerNum}hand`}\r\n        listClass={\"handlist\"}\r\n        rowId={playerHandId}\r\n        setCardFocus={props.setCardFocus}\r\n      />\r\n      <div className=\"playerbuttons\">\r\n      <button\r\n        className=\"drawbutton\"\r\n        disabled={handCards.length >= 8}\r\n        onClick={() => drawCards(nextCardDraw)}\r\n      >\r\n        Draw\r\n      </button>\r\n      <button \r\n        disabled={!(turnState.playerTurn === playerNum)} \r\n        className=\"endturnbutton\"\r\n        onClick={turnState.playerTurn === 1 ? (\r\n          () => setTurnState(prevState => ({\r\n            turnCount: (prevState.turnCount + 1),\r\n            playerTurn: 2,\r\n          }))) : (\r\n          () => setTurnState(prevState => ({\r\n            turnCount: (prevState.turnCount + 1),\r\n            playerTurn: 1,\r\n          }))\r\n          )\r\n        }\r\n      >\r\n        End Turn\r\n      </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\r\nexport default function PowerCounter(props) {\r\n  return (\r\n    <div className=\"power playerarea-section\">\r\n      <div id={`player${props.playerNum}power`} className=\"powercounter counter\">\r\n        <span id={props.id}>\r\n          <h4>{props.power}</h4>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useContext } from \"react\";\r\nimport PlayerHand from \"./PlayerHand\";\r\nimport PowerCounter from \"./PowerCounter\";\r\nimport gameContext from \"context/gameContext\";\r\n\r\nexport default function PlayerArea(props) {\r\n  const { gameState } = useContext(gameContext);\r\n\r\n  const playerAreaId = `player${props.playerNum}area`;\r\n  const playerPower = gameState.rows[`player${props.playerNum}hand`].power;\r\n  const totalPower = Object.values(playerPower).reduce((a, b) => a + b, 0);\r\n\r\n  console.log(props.nextCardDraw)\r\n\r\n  return (\r\n    <div id={playerAreaId} className=\"playerarea row\">\r\n      <div className=\"playername playerarea-section\">\r\n        Player {props.playerNum}\r\n      </div>\r\n      <PlayerHand\r\n        setCardFocus={props.setCardFocus}\r\n        playerNum={props.playerNum}\r\n        nextCardDraw={props.nextCardDraw}\r\n        setNextCardDraw={props.setNextCardDraw}\r\n      />\r\n      <PowerCounter playerNum={props.playerNum} power={totalPower} />\r\n    </div>\r\n  );\r\n}\r\n","\r\nexport default function SynergyCounter(props) {\r\n\r\n  return (\r\n    <div className=\"synergycontainer\">\r\n      <div className=\"synergycounter counter\">\r\n        <span id={props.id}><h4>{props.synergy}</h4></span>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useContext } from 'react';\r\nimport gameContext from 'context/gameContext';\r\nimport HeroCounter from 'components/layout/HeroCounter';\r\n\r\nexport default function CounterArea(props) {\r\n  const { gameState } = useContext(gameContext);\r\n  const type = props.type;\r\n  const rowId = props.rowId;\r\n  \r\n  // Create icons array and store ids of hero with icons inside\r\n  const effects = gameState.rows[rowId].effects;\r\n  \r\n  return(\r\n    <div className={`${type}-counterarea counterarea`}>\r\n      {effects && effects.map((playerHeroId) => {\r\n          return (\r\n            <HeroCounter \r\n              playerHeroId={playerHeroId} \r\n              key={playerHeroId} \r\n              setCardFocus={props.setCardFocus} \r\n              playerNum={props.playerNum}\r\n              rowId={rowId}\r\n            />\r\n          );\r\n      })}\r\n    </div>\r\n  );\r\n};","import React, { useContext, useEffect } from \"react\";\r\nimport update from \"immutability-helper\";\r\nimport gameContext from \"context/gameContext\";\r\nimport SynergyCounter from \"./SynergyCounter\";\r\nimport CounterArea from \"components/layout/CounterArea\";\r\nimport CardDisplay from \"components/layout/CardDisplay\";\r\n\r\nexport default function BoardRow(props) {\r\n  const { gameState, setGameState } = useContext(gameContext);\r\n  const rowId = props.rowId;\r\n  const rowCards = gameState.rows[rowId].cardIds;\r\n  const playerNum = props.playerNum;\r\n  const playerHand = `player${playerNum}hand`;\r\n  const synergyValue = gameState.rows[rowId].synergy;\r\n\r\n  // Update synergy and power values anytime a card moves row\r\n  useEffect(() => {\r\n    let playerPower = 0;\r\n    const rowPosition = props.rowId[1];\r\n    \r\n    // For every card in the row, add up the power and synergy values\r\n    for (let cardId of rowCards) {\r\n      if (gameState.playerCards[`player${playerNum}cards`].cards[cardId].health > 0) {\r\n        playerPower +=\r\n          gameState.playerCards[`player${playerNum}cards`].cards[cardId].power[\r\n            rowPosition\r\n          ];\r\n      }\r\n    }\r\n\r\n    // Set power and synergy state\r\n    setGameState((prevState) => ({\r\n      ...prevState,\r\n      rows: {\r\n        ...prevState.rows,\r\n        [playerHand]: {\r\n          ...prevState.rows[playerHand],\r\n          power: {\r\n            ...prevState.rows[playerHand].power,\r\n            [rowPosition]: playerPower,\r\n          },\r\n        }\r\n      }\r\n    }));\r\n\r\n    // TODO: Not all dependencies here, check\r\n  }, [rowCards, gameState.playerCards[`player${playerNum}cards`]]);\r\n\r\n  return (\r\n    <div id={rowId} className=\"rowarea row\">\r\n      <CounterArea\r\n        type={\"row\"}\r\n        setCardFocus={props.setCardFocus}\r\n        playerNum={props.playerNum}\r\n        rowId={props.rowId}\r\n      />\r\n      <div className=\"rowlabel\">{props.label}</div>\r\n      <div className=\"boardrow cardRow\">\r\n        <CardDisplay\r\n          playerNum={props.playerNum}\r\n          droppableId={props.rowId}\r\n          listClass=\"rowlist cardRow\"\r\n          rowId={props.rowId}\r\n          setCardFocus={props.setCardFocus}\r\n        />\r\n      </div>\r\n      <SynergyCounter synergy={synergyValue} />\r\n    </div>\r\n  );\r\n}\r\n","import BoardRow from \"./BoardRow\";\r\nimport data from \"data\";\r\n\r\nexport default function PlayerBoard(props) {\r\n  const rows = data.rows;\r\n  \r\n  // Renders board rows according to the order in data.rows\r\n  // Not ideal, but apparently Object.keys order is reliable\r\n  return (\r\n    <div id={`player${props.playerNum}board`} className=\"board\">\r\n      {Object.keys(rows).map((rowId) => {\r\n        if (parseInt(rowId[0]) === props.playerNum) {\r\n          return (\r\n            <BoardRow\r\n              setCardFocus={props.setCardFocus}\r\n              playerNum={props.playerNum}\r\n              label={rows[rowId].label}\r\n              rowId={rows[rowId].id}\r\n              key={rows[rowId].id}\r\n            />\r\n          );\r\n        } else return null;\r\n      })}\r\n    </div>\r\n  );\r\n  \r\n}\r\n","import React, { useContext } from \"react\";\r\nimport gameContext from \"context/gameContext\";\r\nimport PlayerArea from \"components/layout/PlayerArea\";\r\nimport PlayerBoard from \"components/layout/PlayerBoard\";\r\n\r\nexport default function PlayerHalf(props) {\r\n  const { gameState } = useContext(gameContext);\r\n  // Power state for each player\r\n  const playerPower = gameState.rows[`player${props.playerNum}hand`].power;\r\n  const totalPower = Object.values(playerPower).reduce((a, b) => a + b, 0);\r\n  \r\n  // Reverse order depending on which player (player 2 is on top of the screen, 1 on bottom)\r\n  if (props.playerNum === 1) {\r\n    return (\r\n      <div>\r\n        <PlayerBoard\r\n          playerNum={props.playerNum}\r\n          setCardFocus={props.setCardFocus}\r\n        />\r\n        <PlayerArea\r\n          playerNum={props.playerNum}\r\n          setCardFocus={props.setCardFocus}\r\n          totalPower={totalPower}\r\n          nextCardDraw={props.nextCardDraw}\r\n          setNextCardDraw={props.setNextCardDraw}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (props.playerNum === 2) {\r\n    return (\r\n      <div>\r\n        <PlayerArea\r\n          playerNum={props.playerNum}\r\n          setCardFocus={props.setCardFocus}\r\n          totalPower={totalPower}\r\n          nextCardDraw={props.nextCardDraw}\r\n          setNextCardDraw={props.setNextCardDraw}\r\n        />\r\n        <PlayerBoard\r\n          playerNum={props.playerNum}\r\n          setCardFocus={props.setCardFocus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo3.927a5abd.png\";","import owlogo from \"assets/logo3.png\";\r\n\r\nexport default function TitleCard() {\r\n  return (\r\n    <div id=\"centerlogocontainer\">\r\n      <br />\r\n      <span className=\"title\">Overwatch</span>\r\n      <span className=\"credit\">\r\n        Game & Card Design by\r\n        <br />\r\n        u/bwb912\r\n      </span>\r\n      <img src={owlogo} id=\"centerlogo\" alt=\"owlogo\" />\r\n      <span className=\"credit\">\r\n        Digitisation by\r\n        <br />\r\n        Nathan H Miles\r\n      </span>\r\n      <span className=\"title\">Card Game</span>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n","export default function Footer() {\r\n  return(\r\n    <footer>\r\n      <span className=\"disclaimer\">\r\n        All characters, art and the Overwatch logo and brand are the property of Blizzard Entertainment, Inc. This is a free, fan-made game that is not affiliated with Blizzard Entertainment, Inc. in any way.\r\n      </span>\r\n    </footer>\r\n  );\r\n}","import React, { useContext } from \"react\";\r\nimport gameContext from \"context/gameContext\";\r\nimport turnContext from \"context/turnContext\";\r\nimport $ from \"jquery\";\r\nimport helper from 'helper';\r\n\r\nexport default function HeroAbilities(props) {\r\n  // Context\r\n  const { gameState, setGameState } = useContext(gameContext);\r\n  const { turnState, setTurnState } = useContext(turnContext);\r\n\r\n  // Variables\r\n  const playerNum = props.playerNum;\r\n  const playerHeroId = props.playerHeroId;\r\n  const heroId = playerHeroId.slice(1, playerHeroId.length);\r\n  const playerCardsId = `player${playerNum}cards`;\r\n  const rowId = props.rowId;\r\n  const cardFocus = props.cardFocus;\r\n  const setCardFocus = props.setCardFocus;\r\n  const unsetCardFocus = props.unsetCardFocus;\r\n  \r\n  function setRowSynergy(rowId, synergyCost) {\r\n\r\n    setGameState((prevState) => ({\r\n      ...prevState,\r\n      rows: {\r\n        ...prevState.rows,\r\n        [rowId]: {\r\n          ...prevState.rows[rowId],\r\n          synergy: prevState.rows[rowId].synergy - synergyCost,\r\n        },\r\n      },\r\n    }));\r\n  }\r\n\r\n  // Applies damage to either shields or health as needed, returning both the shield and health value\r\n  function applyDamage(damageValue, targetId) {\r\n    const targetPlayerNum = targetId[0];\r\n\r\n    let targetHealth = gameState.playerCards[`player${targetPlayerNum}cards`].cards[targetId].health;\r\n    let targetShield = gameState.playerCards[`player${targetPlayerNum}cards`].cards[targetId].shield;\r\n    \r\n    for (let i = 0; i < damageValue; i++) {\r\n      if (targetShield > 0) {\r\n        targetShield -= 1;\r\n      } else {\r\n        targetHealth -= 1;\r\n      }\r\n    }\r\n\r\n    return {targetHealth, targetShield};\r\n  }\r\n\r\n  // Abilities data\r\n  const abilities = {\r\n    dva: {\r\n      ability2: {\r\n        synergyCost: 2,\r\n        run() {\r\n          return new Promise((resolve, reject) => {\r\n          \r\n            props.setNextCardDraw(prevState => ({\r\n              ...prevState,\r\n              [`player${playerNum}`]: 'dvameka'\r\n            }));\r\n\r\n          resolve();\r\n        })\r\n        },\r\n      },\r\n    },\r\n    dvameka: {\r\n      ability1: {\r\n        run() {\r\n          const newShield = 2;\r\n\r\n          setGameState((prevState) => ({\r\n            ...prevState,\r\n            playerCards: {\r\n              ...prevState.playerCards,\r\n              [`player${playerNum}cards`]: {\r\n                ...prevState.playerCards[`player${playerNum}cards`],\r\n                cards: {\r\n                  ...prevState.playerCards[`player${playerNum}cards`].cards,\r\n                  [`${playerNum}dvameka`]: {\r\n                    ...prevState.playerCards[`player${playerNum}cards`].cards[`${playerNum}dvameka`],\r\n                    shield: (prevState.playerCards[`player${playerNum}cards`].cards[`${playerNum}dvameka`].shield + newShield),\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          }));\r\n        },\r\n      },\r\n      ability2: {\r\n        synergyCost: 3,\r\n        run() {\r\n          const rowPosition = rowId[1];\r\n          const enemyPlayer = playerNum === 1 ? 2 : 1;\r\n          const playerRowCardIds = gameState.rows[rowId].cardIds;\r\n          const enemyPlayerRowCardIds = gameState.rows[`${enemyPlayer}${rowPosition}`].cardIds;\r\n          \r\n          const damageValue = 4;\r\n          \r\n          // Damage own player cards\r\n          for (let cardId of playerRowCardIds) {\r\n            const { targetHealth, targetShield } = applyDamage(damageValue, cardId);\r\n            \r\n            setGameState((prevState) => ({\r\n              ...prevState,\r\n              playerCards: {\r\n                ...prevState.playerCards,\r\n                [`player${playerNum}cards`]: {\r\n                  ...prevState.playerCards[`player${playerNum}cards`],\r\n                  cards: {\r\n                    ...prevState.playerCards[`player${playerNum}cards`].cards,\r\n                    [cardId]: {\r\n                      ...prevState.playerCards[`player${playerNum}cards`].cards[cardId],\r\n                      health: targetHealth,\r\n                      shield: targetShield,\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            }));\r\n          }\r\n          \r\n\r\n          // Damage enemy cards\r\n          for (let cardId of enemyPlayerRowCardIds) {\r\n            const { targetHealth, targetShield } = applyDamage(damageValue, cardId);  \r\n            \r\n            setGameState((prevState) => ({\r\n              ...prevState,\r\n              playerCards: {\r\n                ...prevState.playerCards,\r\n                [`player${enemyPlayer}cards`]: {\r\n                  ...prevState.playerCards[`player${enemyPlayer}cards`],\r\n                  cards: {\r\n                    ...prevState.playerCards[`player${enemyPlayer}cards`].cards,\r\n                    [cardId]: {\r\n                      ...prevState.playerCards[`player${enemyPlayer}cards`].cards[cardId],\r\n                      health: targetHealth,\r\n                      shield: targetShield,\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            }));\r\n          }\r\n            \r\n\r\n          // After effects\r\n          // Create new dva card \r\n          const newDva = helper.createPlayerCard(playerNum, 'dva');\r\n          // Remove dvameka card from row (still exists in playercards)\r\n          const newRowCards = gameState.rows[rowId].cardIds.filter(cardId => cardId !== `${playerNum}dvameka`);\r\n          \r\n          setGameState((prevState) => ({\r\n            ...prevState,\r\n            playerCards: {\r\n              ...prevState.playerCards,\r\n              [`player${playerNum}cards`]: {\r\n                ...prevState.playerCards[`player${playerNum}cards`],\r\n                cards: {\r\n                  ...prevState.playerCards[`player${playerNum}cards`].cards,\r\n                  [`${playerNum}dvameka`]: {\r\n                    ...prevState.playerCards[`player${playerNum}cards`].cards[`${playerNum}dvameka`],\r\n                    isDiscarded: true,\r\n                  },\r\n                  [newDva.playerHeroId]: newDva,\r\n                },\r\n              },\r\n            },\r\n            rows: {\r\n              ...prevState.rows,\r\n              [rowId]: {\r\n                ...prevState.rows[rowId],\r\n                cardIds: [...newRowCards, newDva.playerHeroId],\r\n              },\r\n            },\r\n          }));\r\n\r\n        },\r\n      },\r\n    },\r\n    genji: {\r\n      ability1: {\r\n        maxTargets: 3,\r\n        run() {\r\n          return new Promise((resolve, reject) => {\r\n            $(\".card\").on(\"click\", (e) => {\r\n              const targetCardId = $(e.target).closest(\".card\").attr(\"id\");\r\n              const enemyPlayer = targetCardId[0];\r\n              const targetRow = $(e.target).closest(\".row\").attr(\"id\");\r\n\r\n              $(\".card\").off(\"click\");\r\n              // Check target is valid\r\n              if (targetRow[0] === \"p\" || targetRow[0] === playerNum) {\r\n                reject(\"Incorrect target\");\r\n                return;\r\n              }\r\n\r\n              const { targetHealth, targetShield } = applyDamage(1, targetCardId);\r\n              // Apply abilities that affect a specific card\r\n\r\n              setGameState((prevState) => ({\r\n                ...prevState,\r\n                playerCards: {\r\n                  ...prevState.playerCards,\r\n                  [`player${enemyPlayer}cards`]: {\r\n                    ...prevState.playerCards[`player${enemyPlayer}cards`],\r\n                    cards: {\r\n                      ...prevState.playerCards[`player${enemyPlayer}cards`]\r\n                        .cards,\r\n                      [targetCardId]: {\r\n                        ...prevState.playerCards[`player${enemyPlayer}cards`]\r\n                          .cards[targetCardId],\r\n                        health: targetHealth,\r\n                        shield: targetShield,\r\n                      },\r\n                    },\r\n                  },\r\n                },\r\n              }));\r\n\r\n              resolve();\r\n            });\r\n          });\r\n        },\r\n      },\r\n      ability2: {\r\n        synergyCost: 3,\r\n        run() {\r\n          return new Promise((resolve, reject) => {\r\n            \r\n            // Execute the following when any card is clicked\r\n            $(\".card\").on(\"click\", (e) => {\r\n              const targetCardId = $(e.target).closest(\".card\").attr(\"id\");\r\n              const enemyPlayer = targetCardId[0];\r\n              const targetRow = $(e.target).closest(\".row\").attr(\"id\");\r\n              \r\n              // Remove the onclick effect from all cards\r\n              $(\".card\").off(\"click\");\r\n              // Check target is valid\r\n              if (\r\n                targetRow[0] === \"p\" ||\r\n                targetRow[0] === playerNum ||\r\n                // Check target has been damaged\r\n                gameState.playerCards[`player${enemyPlayer}cards`].cards[\r\n                  targetCardId\r\n                ].health ===\r\n                  gameState.playerCards[`player${enemyPlayer}cards`].cards[\r\n                    targetCardId\r\n                  ].maxHealth\r\n              ) {\r\n                reject(\"Incorrect target\");\r\n                return;\r\n              }\r\n              const cardKey = \"health\";\r\n              const cardValue = 0;\r\n              // Apply abilities that affect a specific card\r\n\r\n              setGameState((prevState) => ({\r\n                ...prevState,\r\n                playerCards: {\r\n                  ...prevState.playerCards,\r\n                  [`player${enemyPlayer}cards`]: {\r\n                    ...prevState.playerCards[`player${enemyPlayer}cards`],\r\n                    cards: {\r\n                      ...prevState.playerCards[`player${enemyPlayer}cards`]\r\n                        .cards,\r\n                      [targetCardId]: {\r\n                        ...prevState.playerCards[`player${enemyPlayer}cards`]\r\n                          .cards[targetCardId],\r\n                        [cardKey]: cardValue,\r\n                      },\r\n                    },\r\n                  },\r\n                },\r\n              }));\r\n              resolve();\r\n            });\r\n          });\r\n        },\r\n      },\r\n    },\r\n\r\n    pharah: {\r\n      ability1: {\r\n        run() {\r\n\r\n          return new Promise((resolve, reject) => {\r\n\r\n            $(\".card\").on(\"click\", (e) => {\r\n\r\n              const targetCardId = $(e.target).closest(\".card\").attr(\"id\");\r\n              const enemyPlayer = targetCardId[0];\r\n              const targetRow = $(e.target).closest(\".row\").attr(\"id\");\r\n              \r\n              $(\".card\").off(\"click\");\r\n\r\n              if (targetRow[0] === \"p\" || targetRow[0] === playerNum) {\r\n                // Check target is valid\r\n                reject(\"Incorrect target row\");\r\n                return;\r\n\r\n              } else if (targetRow[1] !== 'b') {\r\n                // Move target back a row if not already in last row\r\n                const newRow = `${enemyPlayer}${targetRow[1] === 'f' ? 'm' : 'b'}`;\r\n                console.log(newRow);\r\n                const updatedTargetRowCardIds = gameState.rows[targetRow].cardIds.filter(cardId => cardId !== targetCardId);\r\n                const newRowCardIds = [...gameState.rows[newRow].cardIds, targetCardId];\r\n                \r\n                setGameState((prevState) => ({\r\n                  ...prevState,\r\n                  rows: {\r\n                    ...prevState.rows,\r\n                    [targetRow]: {\r\n                      ...prevState.rows[targetRow],\r\n                      cardIds: updatedTargetRowCardIds,\r\n                    },\r\n                    [newRow]: {\r\n                      ...prevState.rows[newRow],\r\n                      cardIds: newRowCardIds,\r\n                    },\r\n                  },\r\n                }));\r\n              }\r\n\r\n              // Reduce synergy of target row\r\n              setGameState((prevState) => ({\r\n                ...prevState,\r\n                rows: {\r\n                  ...prevState.rows,\r\n                  [targetRow]: {\r\n                    ...prevState.rows[targetRow],\r\n                    synergy: (prevState.rows[targetRow].synergy - 2),\r\n                  },\r\n                },\r\n              }));\r\n\r\n              resolve();\r\n            });\r\n          });\r\n\r\n        },\r\n      },\r\n      ability2: {\r\n        maxTargets: 3,\r\n        synergyCost: 3,\r\n        run() {\r\n          \r\n          return new Promise((resolve, reject) => {\r\n            \r\n            $(\".card\").on(\"click\", (e) => {\r\n              \r\n              const targetCardId = $(e.target).closest(\".card\").attr(\"id\");\r\n              const enemyPlayer = targetCardId[0];\r\n              const targetRow = $(e.target).closest(\".row\").attr(\"id\");\r\n\r\n              $(\".card\").off(\"click\");\r\n              // Check target is valid\r\n              if (targetRow[0] === \"p\" || targetRow[0] === playerNum) {\r\n                reject(\"Incorrect target\");\r\n                return;\r\n              }\r\n\r\n              const damageValue = 2;\r\n\r\n              const { targetHealth, targetShield } = applyDamage(damageValue, targetCardId);\r\n\r\n              // Apply abilities that affect a specific card\r\n\r\n              setGameState((prevState) => ({\r\n                ...prevState,\r\n                playerCards: {\r\n                  ...prevState.playerCards,\r\n                  [`player${enemyPlayer}cards`]: {\r\n                    ...prevState.playerCards[`player${enemyPlayer}cards`],\r\n                    cards: {\r\n                      ...prevState.playerCards[`player${enemyPlayer}cards`]\r\n                        .cards,\r\n                      [targetCardId]: {\r\n                        ...prevState.playerCards[`player${enemyPlayer}cards`]\r\n                          .cards[targetCardId],\r\n                        health: targetHealth,\r\n                        shield: targetShield,\r\n                      },\r\n                    },\r\n                  },\r\n                },\r\n              }));\r\n\r\n              resolve();\r\n            });\r\n          });\r\n\r\n        },\r\n      },\r\n    },\r\n\r\n    widowmaker: {\r\n      ability1: {\r\n        run() {\r\n          return new Promise((resolve, reject) => {\r\n            $(\".row\").on(\"click\", (e) => {\r\n              const targetRow = $(e.target).closest(\".row\").attr(\"id\");\r\n          \r\n              const rowKey = \"effects\";\r\n              const rowValue = \"2widowmaker\";\r\n\r\n              $(\".row\").off(\"click\");\r\n              if (targetRow[0] === \"p\" || targetRow[0] === playerNum) {\r\n                reject(\"Incorrect target\");\r\n              } else {\r\n                setGameState((prevState) => ({\r\n                  ...prevState,\r\n                  rows: {\r\n                    ...prevState.rows,\r\n                    [targetRow]: {\r\n                      ...prevState.rows[targetRow],\r\n                      [rowKey]: [\r\n                        ...prevState.rows[targetRow][rowKey],\r\n                        rowValue,\r\n                      ],\r\n                    },\r\n                  },\r\n                }));\r\n                resolve();\r\n              }\r\n            });\r\n          });\r\n        },\r\n      },\r\n      ability2: {\r\n        synergyCost: 3,\r\n        run() {\r\n          console.log(\"widow ability2 started\");\r\n          return new Promise((resolve, reject) => {\r\n            $(\".card\").on(\"click\", (e) => {\r\n              const targetCardId = $(e.target).closest(\".card\").attr(\"id\");\r\n              const enemyPlayer = targetCardId[0];\r\n              const targetRow = $(e.target).closest(\".row\").attr(\"id\");\r\n              \r\n              $(\".card\").off(\"click\");\r\n              if (targetRow[0] === \"p\" || targetRow[0] === playerNum) {\r\n                reject(\"Incorrect target row\");\r\n                return;\r\n              }\r\n              const cardKey = \"health\";\r\n              const cardValue = 0;\r\n              // Apply abilities that affect a specific card\r\n\r\n              setGameState((prevState) => ({\r\n                ...prevState,\r\n                playerCards: {\r\n                  ...prevState.playerCards,\r\n                  [`player${enemyPlayer}cards`]: {\r\n                    ...prevState.playerCards[`player${enemyPlayer}cards`],\r\n                    cards: {\r\n                      ...prevState.playerCards[`player${enemyPlayer}cards`]\r\n                        .cards,\r\n                      [targetCardId]: {\r\n                        ...prevState.playerCards[`player${enemyPlayer}cards`]\r\n                          .cards[targetCardId],\r\n                        [cardKey]: cardValue,\r\n                      },\r\n                    },\r\n                  },\r\n                },\r\n              }));\r\n\r\n              resolve();\r\n            });\r\n          });\r\n        },\r\n      },\r\n    },\r\n\r\n    zenyatta: {\r\n      ability1: {\r\n        maxTargets: 1,\r\n        run() {\r\n          \r\n        },\r\n      },\r\n      ability2: {\r\n        synergyCost: 3,\r\n        run() {},\r\n      },\r\n    },\r\n  };\r\n\r\n  // Handle the calling of hero abilites, including checking the ability call is valid\r\n  async function activateAbility1(e) {\r\n    e.stopPropagation();\r\n    const maxTargets = abilities[heroId].ability1.maxTargets;\r\n\r\n    // Check that the card is not in the player's hand\r\n    if (rowId[0] !== \"p\") {\r\n      // Call the relevant hero's ability\r\n      try {\r\n        unsetCardFocus();\r\n        \r\n        if ('maxTargets' in abilities[heroId].ability1) {\r\n          // Allow the ability to be triggered more than once if relevant\r\n          let i = 0;  \r\n          do {\r\n            await abilities[heroId].ability1.run();\r\n            i += 1;\r\n          } while (i < maxTargets);\r\n        \r\n        } else await abilities[heroId].ability1.run();\r\n        \r\n      } catch (err) {\r\n        alert(err);\r\n      }\r\n    } else alert(\"Play cards before using abilities!\");\r\n  }\r\n\r\n  async function activateAbility2(e) {\r\n    e.stopPropagation();\r\n    const synergyCost = abilities[heroId].ability2.synergyCost;\r\n    const rowSynergy = gameState.rows[rowId].synergy;\r\n    \r\n    // Check that the card is not in the player's hand\r\n    if (rowId[0] !== \"p\") {\r\n      // Check there is sufficient synergy to use the ability\r\n      if (rowSynergy >= synergyCost) {\r\n        // Call the relevant hero's ability and deduct synergy\r\n        try {\r\n          unsetCardFocus();\r\n          \r\n          // Allow multiple targets if applicable\r\n          if ('maxTargets' in abilities[heroId].ability2) {\r\n            const maxTargets = abilities[heroId].ability2.maxTargets;\r\n            let i = 0;\r\n            do {\r\n              await abilities[heroId].ability2.run();\r\n              i += 1;\r\n            } while (i < maxTargets);\r\n          } else await abilities[heroId].ability2.run();\r\n          \r\n          setRowSynergy(rowId, synergyCost);\r\n        } catch (err) {\r\n          alert(err);\r\n        }\r\n      } else alert(\"Insufficient synergy!\");\r\n    } else alert(\"Play cards before using abilities!\");\r\n  }\r\n\r\n  return (\r\n    <div id=\"abilitiescontainer\">\r\n      <div\r\n        id=\"ability1\"\r\n        className=\"ability ability1\"\r\n        onClick={activateAbility1}\r\n      ></div>\r\n      <div\r\n        id=\"ability2\"\r\n        className=\"ability ability2\"\r\n        onClick={activateAbility2}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport HeroAbilities from 'components/cards/HeroAbilities';\r\nimport gameContext from \"context/gameContext\";\r\nimport HealthCounter from \"components/cards/HealthCounter\";\r\nimport ShieldCounter from 'components/cards/ShieldCounter';\r\n\r\nexport default function CardFocus(props) {\r\n  const { gameState, setGameState } = useContext(gameContext);\r\n  const cardFocus = props.cardFocus;\r\n  const playerHeroId = cardFocus.playerHeroId;\r\n  const playerNum = parseInt(playerHeroId[0]);\r\n  const rowId = cardFocus.rowId;\r\n  const setCardFocus = props.setCardFocus;\r\n  const unsetCardFocus = props.unsetCardFocus;\r\n\r\n  // Get card attributes from relevant player\r\n  const {\r\n    id,\r\n    name,\r\n    health,\r\n    shield,\r\n    effect,\r\n    enemyEffects,\r\n    allyEffects,\r\n    isDiscarded,\r\n  } = gameState.playerCards[`player${playerNum}cards`].cards[playerHeroId];\r\n  \r\n\r\n  return (\r\n    <div id=\"cardfocuscontainer\">\r\n      <div\r\n        id={`${playerHeroId}-cardfocus`}\r\n        className=\"cardfocus\"\r\n        onClick={props.unsetCardFocus}\r\n      >\r\n        <HealthCounter type=\"cardfocuscounter\" health={health} />\r\n        {(shield > 0) && <ShieldCounter type=\"cardfocuscounter\" shield={shield} />}\r\n        <img\r\n          src={require(`assets/heroes/${id}.png`).default}\r\n          className=\"cardimg\"\r\n          alt={\"Card Focus\"}\r\n        />\r\n        {health > 0 ? (\r\n          <HeroAbilities \r\n          playerNum={playerNum}\r\n          playerHeroId={playerHeroId}\r\n          rowId={rowId}\r\n          cardFocus={cardFocus}\r\n          setCardFocus={setCardFocus}\r\n          unsetCardFocus={unsetCardFocus}\r\n          setNextCardDraw={props.setNextCardDraw}\r\n        />\r\n        ) :(null)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport gameContext from \"context/gameContext\";\r\nimport turnContext from \"context/turnContext\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport \"./App.css\";\r\nimport PlayerHalf from \"components/layout/PlayerHalf\";\r\nimport TitleCard from \"components/layout/TitleCard\";\r\nimport Footer from \"components/layout/Footer\";\r\nimport CardFocus from \"components/cards/CardFocus\";\r\nimport data from \"data\";\r\nimport helper from \"helper\";\r\n\r\nfunction App() {\r\n  const [gameState, setGameState] = useState(data);\r\n  const [matchState, setMatchState] = useState({\r\n    player1: { wins: 0 },\r\n    player2: { wins: 0 },\r\n    wonLastMatch: 0,\r\n  });\r\n  const [turnState, setTurnState] = useState({\r\n    turnCount: 1,\r\n    playerTurn: helper.getRandInt(1, 3),\r\n  });\r\n  const [cardFocus, setCardFocus] = useState(null);\r\n  const [nextCardDraw, setNextCardDraw] = useState({\r\n    player1: null,\r\n    player2: null,\r\n  });\r\n\r\n  function handleOnDragEnd(result) {\r\n    const { destination, source, draggableId } = result;\r\n    if (!destination) return;\r\n\r\n    const start = gameState.rows[source.droppableId];\r\n    const finish = gameState.rows[destination.droppableId];\r\n    const playerNum = finish.id[0];\r\n    const finishPosition = finish.id[1];\r\n    let finishSynergy = finish.synergy;\r\n\r\n    // If moving within the same row\r\n    if (start === finish) {\r\n      const newCardIds = Array.from(start.cardIds);\r\n      newCardIds.splice(source.index, 1);\r\n      newCardIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newRow = {\r\n        ...start,\r\n        cardIds: newCardIds,\r\n      };\r\n\r\n      const newState = {\r\n        ...gameState,\r\n        rows: {\r\n          ...gameState.rows,\r\n          [newRow.id]: newRow,\r\n        },\r\n      };\r\n\r\n      setGameState(newState);\r\n      return;\r\n    }\r\n\r\n    // Moving from one list to another\r\n    const startCardIds = Array.from(start.cardIds);\r\n    startCardIds.splice(source.index, 1);\r\n    const newStart = {\r\n      ...start,\r\n      cardIds: startCardIds,\r\n    };\r\n\r\n    // Get the synergy value that the dragged card applies to the destination row\r\n    const addSynergy =\r\n      gameState.playerCards[`player${playerNum}cards`].cards[draggableId]\r\n        .synergy[finishPosition];\r\n\r\n    const finishCardIds = Array.from(finish.cardIds);\r\n    finishCardIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = {\r\n      ...finish,\r\n      cardIds: finishCardIds,\r\n      synergy: finish.synergy + addSynergy,\r\n    };\r\n\r\n    // Set the order of the new rows, and set dragged card synergy to 0\r\n    const newState = {\r\n      ...gameState,\r\n      rows: {\r\n        ...gameState.rows,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish,\r\n      },\r\n      playerCards: {\r\n        ...gameState.playerCards,\r\n        [`player${playerNum}cards`]: {\r\n          ...gameState.playerCards[`player${playerNum}cards`],\r\n          cards: {\r\n            ...gameState.playerCards[`player${playerNum}cards`].cards,\r\n            [draggableId]: {\r\n              ...gameState.playerCards[`player${playerNum}cards`].cards[\r\n                draggableId\r\n              ],\r\n              isPlayed: true,\r\n              synergy: {\r\n                f: 0,\r\n                m: 0,\r\n                b: 0,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n\r\n    setGameState(newState);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <turnContext.Provider value={{ turnState, setTurnState }}>\r\n        <gameContext.Provider value={{ gameState, setGameState }}>\r\n          <Footer />\r\n          <DragDropContext onDragEnd={handleOnDragEnd}>\r\n            <PlayerHalf\r\n              playerNum={2}\r\n              setCardFocus={setCardFocus}\r\n              nextCardDraw={nextCardDraw}\r\n              setNextCardDraw={setNextCardDraw}\r\n            />\r\n            <TitleCard />\r\n            <PlayerHalf\r\n              playerNum={1}\r\n              setCardFocus={setCardFocus}\r\n              nextCardDraw={nextCardDraw}\r\n              setNextCardDraw={setNextCardDraw}\r\n            />\r\n          </DragDropContext>\r\n          {cardFocus && (\r\n            <CardFocus\r\n              setCardFocus={setCardFocus}\r\n              unsetCardFocus={() => {\r\n                setCardFocus(null);\r\n              }}\r\n              cardFocus={cardFocus}\r\n              setNextCardDraw={setNextCardDraw}\r\n            />\r\n          )}\r\n          <Footer />\r\n        </gameContext.Provider>\r\n      </turnContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}